# from rest_framework import serializers
# from django.contrib.auth.hashers import make_password
# from app.models import Client

# class ClientSerializer(serializers.ModelSerializer):
#     class Meta:
#         model = Client
#         fields = ['id', 'full_name', 'contact_number', 'secondary_number', 'email_address', 'password', 'company_name', 'designation', 'created_at', 'updated_at']
    
#     def create(self, validated_data):
#         # Hash the password before saving
#         validated_data['password'] = make_password(validated_data.get('password'))
#         return super().create(validated_data)

#     def update(self, instance, validated_data):
#         # Hash the password before saving
#         if 'password' in validated_data:
#             validated_data['password'] = make_password(validated_data.get('password'))
#         return super().update(instance, validated_data)
    
# from rest_framework import serializers
# from django.contrib.auth.hashers import make_password
# from app.models import Client,Projects,Invoices
# from app.serializers.invoiceSerializer import *
# from app.serializers.projectSerializer import *

# class ClientSerializer(serializers.ModelSerializer):
#     class Meta:
#         model = Client
#         fields = ['id', 'full_name', 'contact_number', 'secondary_number', 'email_address', 'password', 'company_name', 'designation', 'created_at', 'updated_at']
    
#     def create(self, validated_data):
#         # Hash the password before saving
#         validated_data['password'] = make_password(validated_data.get('password'))
#         return super().create(validated_data)

#     def update(self, instance, validated_data):
#         # Hash the password before saving
#         if 'password' in validated_data:
#             validated_data['password'] = make_password(validated_data.get('password'))
#         return super().update(instance, validated_data)
# from rest_framework import serializers
# from django.contrib.auth.hashers import make_password
# from app.models import Client,Projects,Invoices
# from app.serializers.invoiceSerializer import *
# from app.serializers.projectSerializer import *

# class ClientSerializer(serializers.ModelSerializer):
#     project = ProjectsSerializer()
#     invoice = InvoicesSerializer()
#     class Meta:
#         model = Client
#         fields = ['id', 'full_name', 'contact_number', 'secondary_number', 'email_address', 'password', 'company_name', 'designation', 'created_at', 'updated_at']
    
#     def create(self, validated_data):
#         # Hash the password before saving
#         validated_data['password'] = make_password(validated_data.get('password'))
#         return super().create(validated_data)

#     def update(self, instance, validated_data):
#         # Hash the password before saving
#         if 'password' in validated_data:
#             validated_data['password'] = make_password(validated_data.get('password'))
#         return super().update(instance, validated_data)
